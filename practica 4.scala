import scala.math
import scala.util.matching.Regex
import scala.compiletime.ops.string
import scala.math.BigInt


// =======================================
// ==          EJERCICIO 1              ==
// =======================================

// ============Funcion Recursiva================
def getDigits(n:BigInt):List[BigInt]=if(n == 0){List()}else{List(n%10) ++ getDigits(n/10)}
 
// =======================================
// ==          EJERCICIO 2              ==
// =======================================

// ============Funcion Recursiva================
def doubleSecond(l:List[BigInt]):List[BigInt]={
    if(!(l.length == 0)){
        if((l.drop(1)).length == 0){
            List(l.head)
        }else{
            List((l.head)) ++ List((((l.drop(1)).head)*2)) ++ (doubleSecond (l.drop(2)))
        }
    }else{
        List()
    }
}


// =======================================
// ==          EJERCICIO 3              ==
// =======================================
// ===========Listas Por Comprención============
def planishAll_1(l:List[BigInt]):List[BigInt]={
    for(x <- l) yield sumaEnteros(x)
}

// =======================================
// ==          EJERCICIO 4              ==
// =======================================

// ============Funcion Recursiva================
def sumDigits(l:List[BigInt]):BigInt={
    if(l.isEmpty){
        0
    }else{
        sumaEnteros(l.head) + sumDigits (l.drop(1))
    }
}


// =======================================
// ==          EJERCICIO 5              ==
// =======================================

// ============Funcion Recursiva================
def isValid(n:BigInt):Boolean={
    if((sumDigits (planishAll (doubleSecond (getDigits(n)))))%10 == 0){
        true
    }else{
        false
    }
}


// =======================================
// ==          EJERCICIO 6              ==
// =======================================

// ===========Listas Por Comprención============
def numValid(l:List[BigInt]):Int={
    (for (i <- l if  isValid(i) == true) yield 1).sum
}


// =======================================
// ==          EJERCICIO 7              ==
// =======================================

// ===========Listas Por Comprención============
def cardsValid(l:List[BigInt]):List[BigInt]={
    (for (i <- l if  isValid(i) == true) yield i)
}


// =======================================
// ==        Lista De Numeros           ==
// =======================================

val listNum   = List(BigInt("4716347184862961"),
                BigInt("4532899082537349"),
                BigInt("4485429517622493"),
                BigInt("4320635998241421"),
                BigInt("4929778869082405"),
                BigInt("5256283618614517"),
                BigInt("5507514403575522"),
                BigInt("5191806267524120"),
                BigInt("5396452857080331"),
                BigInt("5567798501168013"),
                BigInt("6011798764103720"),
                BigInt("6011970953092861"),
                BigInt("6011486447384806"),
                BigInt("6011337752144550"),
                BigInt("6011442159205994"),
                BigInt("4916188093226163"),
                BigInt("4916699537435624"),
                BigInt("4024607115319476"),
                BigInt("4556945538735693"),
                BigInt("4532818294886666"),
                BigInt("5349308918130507"),
                BigInt("5156469512589415"),
                BigInt("5210896944802939"),
                BigInt("5442782486960998"),
                BigInt("5385907818416901"),
                BigInt("6011920409800508"),
                BigInt("6011978316213975"),
                BigInt("6011221666280064"),
                BigInt("6011285399268094"),
                BigInt("6011111757787451"),
                BigInt("4024007106747875"),
                BigInt("4916148692391990"),
                BigInt("4916918116659358"),
                BigInt("4024007109091313"),
                BigInt("4716815014741522"),
                BigInt("5370975221279675"),
                BigInt("5586822747605880"),
                BigInt("5446122675080587"),
                BigInt("5361718970369004"),
                BigInt("5543878863367027"),
                BigInt("6011996932510178"),
                BigInt("6011475323876084"),
                BigInt("6011358905586117"),
                BigInt("6011672107152563"),
                BigInt("6011660634944997"),
                BigInt("4532917110736356"),
                BigInt("4485548499291791"),
                BigInt("4532098581822262"),
                BigInt("4018626753711468"),
                BigInt("4454290525773941"),
                BigInt("5593710059099297"),
                BigInt("5275213041261476"),
                BigInt("5244162726358685"),
                BigInt("5583726743957726"),
                BigInt("5108718020905086"),
                BigInt("6011887079002610"),
                BigInt("6011119104045333"),
                BigInt("6011296087222376"),
                BigInt("6011183539053619"),
                BigInt("6011067418196187"),
                BigInt("4532462702719400"),
                BigInt("4420029044272063"),
                BigInt("4716494048062261"),
                BigInt("4916853817750471"),
                BigInt("4327554795485824"),
                BigInt("5138477489321723"),
                BigInt("5452898762612993"),
                BigInt("5246310677063212"),
                BigInt("5211257116158320"),
                BigInt("5230793016257272"),
                BigInt("6011265295282522"),
                BigInt("6011034443437754"),
                BigInt("6011582769987164"),
                BigInt("6011821695998586"),
                BigInt("6011420220198992"),
                BigInt("4716625186530516"),
                BigInt("4485290399115271"),
                BigInt("4556449305907296"),
                BigInt("4532036228186543"),
                BigInt("4916950537496300"),
                BigInt("5188481717181072"),
                BigInt("5535021441100707"),
                BigInt("5331217916806887"),
                BigInt("5212754109160056"),
                BigInt("5580039541241472"),
                BigInt("6011450326200252"),
                BigInt("6011141461689343"),
                BigInt("6011886911067144"),
                BigInt("6011835735645726"),
                BigInt("6011063209139742"),
                BigInt("3579517444387209"),
                BigInt("3767250784667541"),
                BigInt("3477171902952673"),
                BigInt("3798852678889749"),
                BigInt("3454499316207827"),
                BigInt("3499685440887576"),
                BigInt("3477279387370269"),
                BigInt("3701477276002793"),
                BigInt("3744657924689268"),
                BigInt("3408607522032008"),
                BigInt("3495693939337707"),
                BigInt("3796102013746008"),
                BigInt("3465908445605212"),
                BigInt("3766389432226480"),
                BigInt("3787533840293475"),
                BigInt("3481595483552931"),
                BigInt("3457141376426823"),
                BigInt("3475565541196262"),
                BigInt("3709197401169031"),
                BigInt("3750592559106822"),
                BigInt("3731295380384602"),
                BigInt("3467345484887282"),
                BigInt("3706978142131153"),
                BigInt("3779681926547404"),
                BigInt("3791274967800695"),
                BigInt("3752132575761616"),
                BigInt("3790558059463707"),
                BigInt("3458354545246713"),
                BigInt("3778515362272012"),
                BigInt("3457632409132322"));